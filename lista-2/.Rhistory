summarise(
tair = mean(!is.na(tair)) * 100,
rh = mean(!is.na(rh)) * 100,
prec = mean(!is.na(prec)) * 100,
rg = mean(!is.na(rg)) * 100,
ws = mean(!is.na(ws)) * 100
) %>%
mutate_if(is.double, round, digits = 0)
dados_val_porc <- dados_rs_08_16 %>%
group_by(site) %>%
summarise(
tair = mean(!is.na(tair)) * 100,
rh = mean(!is.na(rh)) * 100,
prec = mean(!is.na(prec)) * 100,
rg = mean(!is.na(rg)) * 100,
ws = mean(!is.na(ws)) * 100
) %>%
mutate_if(is.double, round, digits = 1)
dados_val_porc <- dados_rs_08_16 %>%
group_by(site) %>%
summarise(
tair = mean(!is.na(tair)) * 100,
rh = mean(!is.na(rh)) * 100,
prec = mean(!is.na(prec)) * 100,
rg = mean(!is.na(rg)) * 100,
ws = mean(!is.na(ws)) * 100
) %>%
mutate_if(is.double, round, digits = 0)
dados_val_porc <- dados_rs_08_16 %>%
group_by(site) %>%
summarise(
tair = mean(!is.na(tair)) * 100,
rh = mean(!is.na(rh)) * 100,
prec = mean(!is.na(prec)) * 100,
rg = mean(!is.na(rg)) * 100,
ws = mean(!is.na(ws)) * 100
) %>%
mutate_if(is.double, round, digits = 1)
dados_val_porc <- dados_rs_08_16 %>%
group_by(site) %>%
summarise(
tair = mean(!is.na(tair)) * 100,
rh = mean(!is.na(rh)) * 100,
prec = mean(!is.na(prec)) * 100,
rg = mean(!is.na(rg)) * 100,
ws = mean(!is.na(ws)) * 100
) %>%
mutate_if(is.double, round, digits = 0)
dados_val_psite <- dados_val_porc %>%
mutate( # Porcentagem m√©dia de obs
pmedest = rowMeans(select(., !site)) # v√°lidas das var por esta√ß√£o
) %>%
arrange(desc = pmedest)
View(dados_val_psite)
dados_val_psite <- dados_val_porc %>%
mutate( # Porcentagem m√©dia de obs
pmedest = rowMeans(select(., !site)) # v√°lidas das var por esta√ß√£o
) %>%
arrange(desc = pmedest)
dados_val_psite <- dados_val_porc %>%
mutate( # Porcentagem m√©dia de obs
pmedest = rowMeans(select(., !site)) # v√°lidas das var por esta√ß√£o
)
dados_val_psite <- dados_val_porc %>%
mutate( # Porcentagem m√©dia de obs
pmedest = rowMeans(select(., !site)) # v√°lidas das var por esta√ß√£o
) %>%
arrange(desc = pmedest)
source("https://gist.githubusercontent.com/lhmet/3ddfc43bcf796c81ecfd9bb93f5f5dc2/raw/b489a6bb4d948472afa5068256b7869a7997e109/aux-funs-list-correction")
knitr::opts_chunk$set(
prompt = FALSE,
cache = FALSE,
comment = "#>",
collapse = TRUE
)
library(tidyverse)
vetor_auxiliar <- c(1 / 11, 8, 3 / 7, 2)
microbenchmark::microbenchmark(
frr = prod_func(v3),
fbase = seq_along(v3)
)
microbenchmark::microbenchmark(
frr = prod_func(v3),
fbase = seq_along(v3)
)
prod_func <- function(vetor) {
vetor_auxiliar <- c(1 / 11, 8, 3 / 7, 2)
return(as.integer(vetor * vetor_auxiliar[1:length(vetor)]))
}
microbenchmark::microbenchmark(
frr = prod_func(v3),
fbase = seq_along(v3)
)
v3 <- c(11, 0.25, 7, 2)
microbenchmark::microbenchmark(
frr = prod_func(v3),
fbase = seq_along(v3)
)
deg2rad(2)
install.packages("REdaS")
library(REdaS)
deg2rad(90)
B = deg2rad(-215)
B
cos( -3.752458)
deg2rad(58)
cos(1.012291)
-0.819152 * 0.5299192
acos(-0.4340844)
rad2deg(2.019818)
B
B <- deg2rad(-215)
B
b <- deg2rad(115.727)
b
A <- asin(3.752458/2.019817)
A
3.752458/2.019817
A <- asin(1.857821)
rad2deg(1.857821)
-90 + 125
-125 - 90
-125 + 90
B <- deg2rad(-35)
b <- acos(cos(B)*cos(deg2rad(58)))
b
rad2deg(b)
B
A <- asin(0.6108652/sin(b))
A
rad2deg(b)
A
B
B
b
rad2deg(A)
180 - 42.69394
agso <- 42164e3
Rterra <- 6371e3
d <- (Rterra^2 + agso^2 - 2*Rterra *agso * cos(b))^(1/2)
d
de-3
d*10^-3
El <- acos((agso/d) * sin(b))
El
rad2deg(0.3043621)
b
B <- -76 + 59
B
B2 <- deg2rad(-17)
B2
B2 <- deg2rad(-17)
b2 <- acos(cos(B2)*cos(deg2rad(12)))
b2
rad2deg(b2)
76 + 59
acos(cos(deg2rad(135))*cos(deg2rad(12)))
rad2deg(2.334574)
asin(0.6108652/sin(b))
B2
asin(0.296706/sin(b))
b2
76 + 59
deg2rad(135)
acos(cos(2.356194)*cos(deg2rad(12)))
asin(2.356194/sin(2.334574))
B2
b2
A2 <- asin(0.296706/sin(b2))
asin(2.356194/sin(2.334574))
asin(0.296706/sin(b2))
A2 <- asin(0.296706/sin(b2))
a2
A2
rad2deg(A2)
180 - 57.0522
d2 <- (Rterra^2 + agso^2 - 2*Rterra *agso * cos(b2))^(1/2)
D2
d2
d2 * 10^(-3)
El2 <- acos((agso/d2) * sin(b2))
EL2
El2
rad2deg(El2)
(Rterra^2 + agso^2 - 2*Rterra *agso * cos(deg2rad(49)))^(1/2)
d3 <- (Rterra^2 + agso^2 - 2*Rterra *agso * cos(deg2rad(49)))^(1/2)
d3 * 10^(-3)
El3 <- acos((agso/d3) * sin(deg2rad(49)))
El3
rad2deg(El3)
90 - 33.78556 - 49
d4 <- (Rterra^2 + agso^2 - 2*Rterra *agso * cos(deg2rad(-67)))^(1/2)
d4
d4 * 10^(-3)
d4 <- (Rterra^2 + agso^2 - 2*Rterra *agso * cos(deg2rad(-67)))^(1/2)
El3 <- acos((agso/d4) * sin(deg2rad(-67)))
d4 <- (Rterra^2 + agso^2 - 2*Rterra *agso * cos(deg2rad(-67)))^(1/2)
El4s <- acos((agso/d4) * sin(deg2rad(-67)))
d4 <- (Rterra^2 + agso^2 - 2*Rterra *agso * cos(deg2rad(-67)))^(1/2)
El4 <- acos((agso/d4) * sin(deg2rad(-67)))
El4
rad2deg( 2.88692)
90 + 67
157 - 165.3083
S = asin((Rterra/agso) * sin(deg2rad(90 + 5)))
S
rad2deg(S)
180 - 95
B5 = acos(cos(deg2rad(85))/cos(deg2rad(15.42)))
B5
rad2deg(B5)
$-65.26 + 84.81
-65.26 + 84.81
-65.26¬∞ + 84.81
-65.26 + 84.81
-65.26 - 84.81
125 + 90
-125-90
agso <- 42164e3
Rterra <- 6371e3
B <- deg2rad(-215)
b <- acos(cos(B)*cos(deg2rad(58)))
agso <- 42164e3
Rterra <- 6371e3
B <- deg2rad(-215)
deg2rad
help deg2rad()
install.packages("pracma")
library(pracma)
agso <- 42164e3
Rterra <- 6371e3
B <- deg2rad(-215)
b <- acos(cos(B)*cos(deg2rad(58)))
b
rad2deg(2.019818)
B
mod(B)
abs(B)
A <- asin(sin(abs(B))/sin(b))
A
rad2deg(A)
Az <- 180 + 39.545
aZ
Az
Az <- -39.545
d <- (Rterra^2 + agso^2 - 2*Rterra *agso * cos(b))^(1/2)
d
de-3
d*10^(-3)
El <- acos((agso/d) * sin(b))
El
rad2deg(El)
76 + 59
b2 <- acos(cos(B2)*cos(deg2rad(12)))
B2 <- deg2rad(135)
b2 <- acos(cos(B2)*cos(deg2rad(12)))
b2
rad2deg(b2)
B2 <- deg2rad(135)
b2 <- acos(cos(B2)*cos(deg2rad(12)))
A2 <- asin(sin(abs(B2))/sin(b2))
A2
rad2deg(A2)
180 + 78.25487
d2 <- (Rterra^2 + agso^2 - 2*Rterra *agso * cos(b2))^(1/2)
d2
d2 * 10**-3
El2 <- acos((agso/d2) * sin(b2))
El2
rad2deg(El2)
sessionInfo()
x <- 1:10
plot(x)
2+4
100:1
read
#----------------------------------------------------------------
# c·lculos b·sicos
15 + 4
1:100
1 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10
4 - 3
# Primeiro script no R
#----------------------------------------------------------------
# c·lculos b·sicos
15 + 4
1:100
1 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10
4 - 3
# Primeiro script no R
#----------------------------------------------------------------
# c·lculos b·sicos
15 + 4
1:100
1 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10
4 - 3
# Primeiro script no R
#----------------------------------------------------------------
# c·lculos b·sicos
15 + 4
1:100
1 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10
4 - 3
#----------------------------------------------------------------
# c·lculos b·sicos
15 + 4
1:100
1 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10
4 - 3
# Primeiro script no R
#----------------------------------------------------------------
# c·lculos b·sicos
15 + 4
1:100
1 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10
4 - 3
# Primeiro script no R
#----------------------------------------------------------------
# c·lculos b·sicos
15 + 4
1:100
1 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10
4 - 3
#----------------------------------------------------------------
# salvando um gr·fico em um arquivo pdf
arquivo_pdf <- "plot-script1.pdf"
pdf(arquivo_pdf)        # cria e abre um arquivo pdf
x <- seq(-2*pi, 2*pi, by = 0.1)
plot(x = x, y = exp(-x/5)*sin(x)^2, type = "o")
dev.off()               # fecha o arquivo pdf
#----------------------------------------------------------------
# Primeiro script no R
#----------------------------------------------------------------
# c·lculos b·sicos
15 + 4
1:100
1 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10
4 - 3
#----------------------------------------------------------------
# salvando um gr·fico em um arquivo pdf
arquivo_pdf <- "plot-script1.pdf"
pdf(arquivo_pdf)        # cria e abre um arquivo pdf
x <- seq(-2*pi, 2*pi, by = 0.1)
plot(x = x, y = exp(-x/5)*sin(x)^2, type = "o")
dev.off()               # fecha o arquivo pdf
#----------------------------------------------------------------
q()
rm(list = ls())
setwd("C:/Users/Cesar/Desktop/Cursos e programa√ß√£o/github/adar/lista-2")
rm(list = ls())
knitr::opts_chunk$set(
echo = TRUE,
comment = "",
prompt = FALSE,
collapse = TRUE
)
library(tidyverse)
tar_est1 <- c(
14.92, 14.61, 14.32, 14.07, 13.84, 13.65, 13.56, 13.97, 15.08,
16.5, 17.88, 19.08, 20.02, 20.66, 21.01, 21.05, 20.76, 20.05,
18.77, 17.51, 16.67, 16.11, 15.66, 15.27
)
tar_est2 <- c(
13.13, 13.01, 12.93, 12.87, 12.82, 12.81, 13.2, 14.22, 15.77,
17.49, 19.2, 20.57, 21.49, 22.01, 22.03, 21.71, 20.84, 18.77,
16.54, 15.13, 14.34, 13.81, 13.49, 13.28
)
max3_est2 <- sort(tar_est2, decreasing = TRUE)[3]
atd_est2 <- round(max(tar_est2) - min(tar_est2), digits = 1)
ind_est1min <- which.min(tar_est1)
hmax_est
ind_est2min <- which.min(tar_est2)
# indices para selecionar as m√°ximas e m√≠nimas temp de est1 e est2
ind_est1max <- which.max(tar_est1)
ind_est2max <- which.max(tar_est2)
ind_est1min <- which.min(tar_est1)
ind_est2min <- which.min(tar_est2)
# hor√°rios de m√°ximas temperaturas nas esta√ß√µes 1 e 2 respectivamente
(hmax_est <- c(ind_est1max, ind_est2max))
# hor√°rios de m√≠nimas temperaturas nas esta√ß√µes 1 e 2 respectivamente
(hmin_est <- c(ind_est1min, ind_est2min))
hmax_est
hmin_est
knitr::opts_chunk$set(echo = TRUE,
comment = "",
prompt = FALSE,
collapse = TRUE
)
library(tidyverse)
# Retorna os hor√°rios de ocorr√™ncia da m√°xima temperatura da est1 e est2
hmax_est <- c(which.max(tar_est1) - 1,which.max(tar_est2) - 1)
hmin_est <- c(which.min(tar_est1) - 1, which.min(tar_est2) - 1)
hmax_est
hmin_est
knitr::opts_chunk$set(
prompt = FALSE,
cache = FALSE,
comment = "#>",
collapse = TRUE
)
library(tidyverse)
# indices para selecionar as m√°ximas e m√≠nimas temp de est1 e est2
ind_est1max <- which(tar_est1 == max(tar_est1)) # which.max(tar_est1)
ind_est2max <- which(tar_est2 == max(tar_est2))
ind_est1min <- which(tar_est1 == min(tar_est1))
ind_est2min <- which(tar_est2 == min(tar_est2))
# hor√°rios de m√°ximas temperaturas nas esta√ß√µes 1 e 2 respectivamente
(hmax_est <- c(ind_est1max - 1, ind_est2max - 1))
# hor√°rios de m√≠nimas temperaturas nas esta√ß√µes 1 e 2 respectivamente
(hmin_est <- c(ind_est1min - 1, ind_est2min - 1))
idmaior_est2<- which(tar_est2 > tar_est1) # posi√ß√µes est2 maior que est1
# Retorna o valor da maior diferen√ßa absoluta entre as esta√ß√µes
maxdif_abs <- max(tar_est2[idmaior_est2] - tar_est1[idmaior_est2])
maxdif_abs
vet_dif <- tar_est2 - tar_est1 # vetor de diferen√ßa auxiliar
# retorna hora de maior dif abs
hrmax_dif <- which(vet_dif == maiordif_abs) - 1
vet_dif <- tar_est2 - tar_est1 # vetor de diferen√ßa auxiliar
# retorna hora de maior dif abs
hrmax_dif <- which(vet_dif == maxdif_abs) - 1
hrmax_dif
tar_est2
tar_est1
tar_est2[idmaior_est2] - tar_est1[idmaior_est2]
max(tar_est2[idmaior_est2] - tar_est1[idmaior_est2])
vet_dif
hrmax_dif
# Posi√ß√£o da temperatura m√°xima
hmax_ests <- c(which.max(tar_est1),which.max(tar_est2))
# Seleciona a partir do hor√°rio de maior temperatura
tar_aux1 <- tar_est1[hmax_ests[1]:length(tar_est1)]
tar_aux2 <- tar_est2[hmax_ests[2]:length(tar_est2)]
dtar_aux1 <- which.max(abs(diff(tar_aux1))) # √≠ndice max dif
dtar_aux2 <- which.max(abs(diff(tar_aux2))) # √≠ndice max dif
# Se precisar da hora ao inv√©s da posi√ß√£o subtrair 1 dos elementos
# de hps_est
hps_est <- c(
which(tar_est1 == tar_est1[dtar_aux1  + hmax_ests[1]]),
which(tar_est2 == tar_est2[dtar_aux2  + hmax_ests[2]])
)
tar_aux1
tar_aux2
abs(diff(tar_aux1))
tar_aux1
abs(diff(tar_aux1))
dtar_aux1
tar_est1[dtar_aux1  + hmax_ests[1]]
which(tar_est1 == tar_est1[dtar_aux1  + hmax_ests[1]]
which(tar_est1 == tar_est1[dtar_aux1  + hmax_ests[1]]
which(tar_est1 == tar_est1[dtar_aux1  + hmax_ests[1]])
limiar_dif <- difabs_total < 0.5
hrprox_est <- c(
which(abs(tar_est1 - tar_est2) < 0.5)
)
paste0("Os hor√°rios com uma difer√™ncia entre as temperaraturas das duas esta√ß√µes de no m√≠nimo 0.5¬∫C s√£o: ",
hrprox_est[1] - 1,",",
hrprox_est[2]-1," e ",
hrprox_est[3] - 1," horas"
)
hrprox_est <- c(
which(abs(tar_est1 - tar_est2) < 0.5)
)
paste0("Os hor√°rios com uma difer√™ncia de difer√™ncia m√≠nima de 0.5¬∫C entre as duas esta√ß√µes s√£o:",
hrprox_est[1] - 1,",",
hrprox_est[2]-1," e ",
hrprox_est[3] - 1," horas"
)
hrprox_est <- c(
which(abs(tar_est1 - tar_est2) < 0.5)
)
paste0("Os hor√°rios com uma difer√™ncia m√≠nima de 0.5¬∫C entre as duas esta√ß√µes s√£o:",
hrprox_est[1] - 1,",",
hrprox_est[2]-1," e ",
hrprox_est[3] - 1," horas"
)
hrprox_est <- c(
which(abs(tar_est1 - tar_est2) < 0.5)
)
paste0("Os hor√°rios com uma difer√™ncia m√≠nima de 0.5¬∫C entre as duas esta√ß√µes s√£o: ",
hrprox_est[1] - 1,",",
hrprox_est[2]-1," e ",
hrprox_est[3] - 1," horas"
)
tmed_est1
# Temperatura m√©dia di√°ria com arredondamento com uma casa decimal
# Esta√ß√£o 1
tmed_est1 <- tar_est1 %>%
mean() %>%
round(digits = 1)
# Esta√ß√£o 2
tmed_est2 <- tar_est2 %>%
mean() %>%
round(digits = 1)
tmed_est1
tmed_est2
dif_met <- c(abs(tmed_est2 - tar_met1),
abs(tmed_est2 - tar_met2),
abs(tmed_est2 - tar_met3)
)
(tar_met1 <- (max(tar_est2) + min(tar_est2)) / 2)
dif_met <- c(abs(tmed_est2 - tar_met1),
abs(tmed_est2 - tar_met2),
abs(tmed_est2 - tar_met3)
)
(tar_met2 <- (max(tar_est2) + min(tar_est2) + tar_est2[10] + 2 * tar_est2[22]) / 5)
(tar_met3 <- (tar_est2[8] + tar_est2[15] + 2 * tar_est2[22]) / 4)
dif_met <- c(abs(tmed_est2 - tar_met1),
abs(tmed_est2 - tar_met2),
abs(tmed_est2 - tar_met3)
)
dif_met
(which(dif_met == min(dif_met)))
